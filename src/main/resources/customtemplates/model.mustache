package {{package}};

{{#models}}
{{#model}}
{{^isEnum}} 
{{#vendorExtensions.x-is-one-of-interface}}{{>oneof_interface}}{{/vendorExtensions.x-is-one-of-interface}}{{^vendorExtensions.x-is-one-of-interface}}
// =====================================================================================================================
// I M P O R T   S E C T I O N
// =====================================================================================================================
import java.util.*;
import jakarta.validation.Valid;
import com.fasterxml.jackson.annotation.*;
import org.springframework.format.annotation.DateTimeFormat;
import datacat.customization.DefaultValuesHandler;

// =====================================================================================================================
// M O D E L   C L A S S   S E C T I O N
// 
// =====================================================================================================================
@JsonTypeName("{{schemaName}}")
public class {{classname}} {

    {{#vars}}
    @JsonProperty("{{baseName}}")
    private {{{dataType}}} {{baseName}};

    {{/vars}}

    // =====================================================================================================================
    // setting default values
    public {{classname}}() {
        DefaultValuesHandler.ensureDefaults(this);
    }

    
    // =====================================================================================================================
    // getters and setters
    {{#vars}}
    public {{{dataType}}} {{getter}}() {
        return {{baseName}};
    }
    public void {{setter}}({{{dataType}}} {{baseName}}) {
        this.{{baseName}} = {{baseName}};
    }

    {{/vars}}

    // =====================================================================================================================
    // business logic method
    public void generateUri(String serverUrl) {
        if(this.uri != null) {
            this.uri = serverUrl + "/BASEPATH/" + this.uri;
        }
    }

    public void transformToLowerCase() {
        if(this.code != null) {
            this.code = this.code.toLowerCase();
        }
    }


    // standard object methods equals, hashCode, and toString
    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        {{classname}} that = ({{classname}}) o;
        return {{#vars}}
            Objects.equals({{baseName}}, that.{{baseName}}) {{^isLast}}&&{{/isLast}}{{/vars}};
    }


    @Override
    public int hashCode() {
        return Objects.hash({{#vars}}
            {{baseName}}{{^isLast}},{{/isLast}}{{/vars}});
    }

    @Override
    public String toString() {
        return 
            "{{classname}}{" +
            {{#vars}}
            ", {{baseName}}=" + {{baseName}} + '\'' +
            {{/vars}} 
            "}";
    }
}
{{/vendorExtensions.x-is-one-of-interface}}
{{/isEnum}}
{{/model}}
{{/models}}